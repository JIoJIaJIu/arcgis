//>>built
define("esri/tasks/ImageServiceProjectTask","dojo/_base/declare dojo/_base/lang dojo/has dojo/_base/Deferred dojo/_base/array ../kernel ../request ../deferredUtils ./Task ../urlUtils ../geometry/jsonUtils".split(" "),function(b,h,f,n,p,q,r,t,u,v,l){b=b(u,{constructor:function(){this._handler=h.hitch(this,this._handler)},execute:function(a,d,k){var c=this._getImageServiceUrl(a),e=new n(t._dfdCanceller);if(c){var c=v.urlToObject(c),w=this._encode(h.mixin({},c.query,{f:"json"},a.toJson())),g=this._handler,
m=this._errorHandler,b=l.getJsonType(a.geometries[0]),f=a.outSR;e._pendingDfd=r({url:c.path+"/project",content:w,callbackParamName:"callback",load:function(a){g(a,b,f,d,k,e)},error:function(a){m(a,k,e)}})}else e.reject("Input arguments do not contain image service URL.");return e},_handler:function(a,d,k,c,e,b){try{var g=this._decodeGeometries(a,d,k);this._successHandler([g],"onComplete",c,b)}catch(m){this._errorHandler(m,e,b)}},_encodeGeometries:function(a){var d,b=[],c=a.length;for(d=0;c>d;d++)b.push(a[d].toJson());
return{geometryType:l.getJsonType(a[0]),geometries:b}},_decodeGeometries:function(a,d,b){var c=l.getGeometryType(d),e=[],f={spatialReference:b},g=h.mixin;return p.forEach(a.geometries,function(a,b){e[b]=new c(g(a,f))}),e},onComplete:function(){},_getImageServiceUrl:function(a){var b;return a&&a.geometries&&a.geometries.length&&a.outSR&&(a.geometries[0].spatialReference||a.geometries[0].spatialReference.url||a.outSR.url?a.geometries[0].spatialReference.url&&a.outSR.url&&a.geometries[0].spatialReference.url!==
a.outSR.url?this.onError(Error("Input and output spatial reference must be from one image service")):b=a.geometries[0].spatialReference&&a.geometries[0].spatialReference.url?a.geometries[0].spatialReference.url:a.outSR.url:this.onError(Error("Spatial reference doesn't contain Image Service URL"))),b}});return f("extend-esri")&&h.setObject("tasks.ImageServiceProjectTask",b,q),b});