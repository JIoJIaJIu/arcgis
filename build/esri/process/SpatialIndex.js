//>>built
define("esri/process/SpatialIndex","../sniff ../kernel dojo/_base/declare dojo/Deferred dojo/_base/lang ./Processor ../workers/WorkerClient ../layers/FeatureLayer".split(" "),function(q,r,g,l,m,t,n,u){g=g([t],{declaredClass:"esri.process.SpatialIndex",index:null,indexType:"rtree",workerCallback:["./scripts/helpers","./scripts/indexInterface","./indexWorker"],autostart:!1,constructor:function(a){a=a||{};var b=!1!==a.autostart;if(m.mixin(this,a),!this.fetchWithWorker){var c=this;this.workerClient=new n("./mutableWorker",
!0);this.workerCallback.push("./libs/"+this.indexType);this.workerClient.importScripts(this.workerCallback).then(function(){c._attachedSystem=!0;b&&c.start()})}this._featCache={}},addLayer:function(a,b){if(a.graphics&&a.graphics.length||b||a.isInstanceOf(u))if(this._attachedSystem)this.inherited(arguments,[a]);else{var c=this.workerClient,e=this;this.inherited(arguments,[a,!0]);c.importScripts("./libs/"+this.indexType).then(function(){e.runProcess(a.graphics,a.id);e._attachedSystem=!0})}},unsetMap:function(){this.stop();
this.workerClient.terminate();this.fetchWithWorker||(this.workerClient=new n(this.workerCallback,!0));this.inherited(arguments);this.start()},removeLayer:function(){this.inherited(arguments)},runProcess:function(a,b){if(a&&a.length){var c=this,e=this.workerClient,d=a[0]._graphicsLayer;b||0===b||(b=d?d.id:"rawFeatures_"+Object.keys(this._featCache).length);this._featCache[b]||(this._featCache[b]={});for(var f,h,p=[],k=a.length,g=d&&d.objectIdField;k--;)h=a[k],f=h.attributes&&g?h.attributes[g]:h.id,
null!=f&&this._featCache[b][f]||(this._featCache[b][f]=1,p.push(h.declaredClass?{id:f,geometry:h.geometry,attributes:h.attributes}:h));e.postMessage({insert:p,system:this.indexType,options:this.indexOptions,idField:d&&d.objectIdField,layerId:b}).then(function(a){d&&d.emit("process-end",{processor:c,results:{insert:a.insert}})});d&&d.emit("process-start",{processor:this})}},_sendFeaturesFromLayer:function(a,b){var c=b.graphic,e=this.workerClient,d=this,f=c.attributes[a.objectIdField];this._featCache[a.id]||
(this._featCache[a.id]={});this._featCache[a.id][f]||(this._featCache[a.id][f]=1,e.postMessage({insert:[{attributes:c.attributes,geometry:c.geometry}],system:this.indexType,options:this.indexOptions,idField:a.objectIdField,layerId:a.id}).then(function(b){a.emit("process-end",{processor:d,results:{insert:b.insert}})}),a.emit("process-start",{processor:d}))},_notifyProcessStart:function(){},_sendFeaturesFromTask:function(a,b){var c,e,d=b.featureSet.features,f=[],h=this.workerClient,g=this,k=d.length;
for(this._featCache[a.id]||(this._featCache[a.id]={});k--;)e=d[k],c=e.attributes[a.objectIdField],this._featCache[a.id][c]||(this._featCache[a.id][c]=1,f.push(e));h.postMessage({insert:f,system:this.indexType,options:this.indexOptions,idField:a.objectIdField,layerId:a.id}).then(function(b){a.emit("process-end",{processor:g,results:{insert:b.insert}})});a.emit("process-start",{processor:g})},get:function(){},intersects:function(a,b,c){var e;return"rtree"!=this.indexType?(console.error("Index.intersects only works with rtree indexes"),
e=new l,e.reject({message:"Index.intersects only works with rtree indexes"}),e.promise):this.workerClient.postMessage({search:a,layerId:b,returnNode:c})},within:function(){var a;if("rtree"!=this.indexType)return console.error("Index.within only works with rtree indexes"),a=new l,a.reject({message:"Index.within only works with rtree indexes"}),a.promise},nearest:function(a){var b;return"kdtree"!=this.indexType?(console.error("Index.nearest only works with kdtree indexes"),b=new l,b.reject({message:"Index.nearest only works with kdtree indexes"}),
b.promise):this.workerClient.postMessage({search:a})}});return q("extend-esri")&&m.setObject("process.SpatialIndex",g,r),g});