//>>built
var RTree=function(a){var c=3,r=6;isNaN(a)||(c=Math.floor(a/2),r=a);this.min_width=c;this.max_width=r;var m={x:0,y:0,w:0,h:0,id:"root",nodes:[]},u=(function(){var a={};return function(f){var b=0;return f in a?b=a[f]++:a[f]=0,f+"_"+b}}(),function(a,f,b){var h=[],d=[],y=[],g=1;if(!a||!RTree.Rectangle.overlap_rectangle(a,b))return y;a={x:a.x,y:a.y,w:a.w,h:a.h,target:f};d.push(b.nodes.length);h.push(b);do{b=h.pop();f=d.pop()-1;if("target"in a)for(;0<=f;){var e=b.nodes[f];if(RTree.Rectangle.overlap_rectangle(a,
e)){if(a.target&&"leaf"in e&&e.leaf===a.target||!a.target&&("leaf"in e||RTree.Rectangle.contains_rectangle(e,a))){"nodes"in e?(y=t(e,!0,[],e),b.nodes.splice(f,1)):y=b.nodes.splice(f,1);RTree.Rectangle.make_MBR(b.nodes,b);delete a.target;b.nodes.length<c&&(a.nodes=t(b,!0,[],b));break}"nodes"in e&&(g+=1,d.push(f),h.push(b),b=e,f=e.nodes.length)}--f}else if("nodes"in a){b.nodes.splice(f+1,1);0<b.nodes.length&&RTree.Rectangle.make_MBR(b.nodes,b);for(f=0;f<a.nodes.length;f++)n(a.nodes[f],b);a.nodes.length=
0;0===h.length&&1>=b.nodes.length?(a.nodes=t(b,!0,a.nodes,b),b.nodes.length=0,h.push(b),d.push(1)):0<h.length&&b.nodes.length<c?(a.nodes=t(b,!0,a.nodes,b),b.nodes.length=0):delete a.nodes}else RTree.Rectangle.make_MBR(b.nodes,b);--g}while(0<h.length);return y}),t=function(a,f,b,h){var d=[];if(!RTree.Rectangle.overlap_rectangle(a,h))return b;d.push(h.nodes);do{h=d.pop();for(var c=h.length-1;0<=c;c--){var g=h[c];RTree.Rectangle.overlap_rectangle(a,g)&&("nodes"in g?d.push(g.nodes):"leaf"in g&&b.push(f?
g:g.leaf))}}while(0<d.length);return b},n=function(a,f){var b;if(0===f.nodes.length)return f.x=a.x,f.y=a.y,f.w=a.w,f.h=a.h,void f.nodes.push(a);var h,d=-1,m=[];m.push(f);var g=f.nodes;do{-1!==d&&(m.push(g[d]),g=g[d].nodes,d=-1);for(var e=g.length-1;0<=e;e--){var l=g[e];if("leaf"in l){d=-1;break}var k=RTree.Rectangle.squarified_ratio(l.w,l.h,l.nodes.length+1),p=Math.max(l.x+l.w,a.x+a.w)-Math.min(l.x,a.x),v=Math.max(l.y+l.h,a.y+a.h)-Math.min(l.y,a.y),l=RTree.Rectangle.squarified_ratio(p,v,l.nodes.length+
2);(0>d||Math.abs(l-k)<h)&&(h=Math.abs(l-k),d=e)}}while(-1!==d);h=a;do{if(b&&"nodes"in b&&0===b.nodes.length)for(d=b,b=m.pop(),g=0;g<b.nodes.length;g++){if(b.nodes[g]===d||0===b.nodes[g].nodes.length){b.nodes.splice(g,1);break}}else b=m.pop();if("leaf"in h||"nodes"in h||Array.isArray(h)){if(Array.isArray(h)){for(d=0;d<h.length;d++)RTree.Rectangle.expand_rectangle(b,h[d]);b.nodes=b.nodes.concat(h)}else RTree.Rectangle.expand_rectangle(b,h),b.nodes.push(h);if(b.nodes.length<=r)h={x:b.x,y:b.y,w:b.w,
h:b.h};else{for(var d=h=b.nodes,e=g=void 0,k=d.length-1,l=0,p=d.length-1,v=0,w=d.length-2;0<=w;w--){var n=d[w];n.x>d[l].x?l=w:n.x+n.w<d[k].x+d[k].w&&(k=w);n.y>d[v].y?v=w:n.y+n.h<d[p].y+d[p].h&&(p=w)}w=Math.abs(d[k].x+d[k].w-d[l].x);n=Math.abs(d[p].y+d[p].h-d[v].y);for(d=(w>n?k>l?(g=d.splice(k,1)[0],e=d.splice(l,1)[0]):(e=d.splice(l,1)[0],g=d.splice(k,1)[0]):p>v?(g=d.splice(p,1)[0],e=d.splice(v,1)[0]):(e=d.splice(v,1)[0],g=d.splice(p,1)[0]),[{x:g.x,y:g.y,w:g.w,h:g.h,nodes:[g]},{x:e.x,y:e.y,w:e.w,h:e.h,
nodes:[e]}]);0<h.length;){for(var g=h,e=d[0],k=d[1],l=v=p=void 0,w=RTree.Rectangle.squarified_ratio(e.w,e.h,e.nodes.length+1),n=RTree.Rectangle.squarified_ratio(k.w,k.h,k.nodes.length+1),u=g.length-1;0<=u;u--){var q=g[u],t,x;t=Math.min(e.x,q.x);x=Math.min(e.y,q.y);t=Math.max(e.x+e.w,q.x+q.w)-t;x=Math.max(e.y+e.h,q.y+q.h)-x;x=Math.abs(RTree.Rectangle.squarified_ratio(t,x,e.nodes.length+2)-w);var z;z=Math.min(k.x,q.x);t=Math.min(k.y,q.y);z=Math.max(k.x+k.w,q.x+q.w)-z;q=Math.max(k.y+k.h,q.y+q.h)-t;q=
Math.abs(RTree.Rectangle.squarified_ratio(z,q,k.nodes.length+2)-n);(!v||!p||Math.abs(q-x)<p)&&(v=u,p=Math.abs(q-x),l=x>q?k:e)}p=g.splice(v,1)[0];e.nodes.length+g.length+1<=c?(e.nodes.push(p),RTree.Rectangle.expand_rectangle(e,p)):k.nodes.length+g.length+1<=c?(k.nodes.push(p),RTree.Rectangle.expand_rectangle(k,p)):(l.nodes.push(p),RTree.Rectangle.expand_rectangle(l,p))}h=d;1>m.length&&(b.nodes.push(d[0]),m.push(b),h=d[1])}}else RTree.Rectangle.expand_rectangle(b,h),h={x:b.x,y:b.y,w:b.w,h:b.h}}while(0<
m.length)};this.serialize=function(){return JSON.stringify(m)};this.deserialize=function(a,c){var b=c=c||m;b.nodes=a.nodes;b.x=a.x;b.y=a.y;b.w=a.w;b.h=a.h;return c};this.search=function(a,c){var b=[a,!!c,[],m];if(void 0===a)throw"Wrong number of arguments. RT.Search requires at least a bounding rectangle.";return t.apply(this,b)};this.remove=function(a,c){var b=Array.prototype.slice.call(arguments);if(1===b.length&&b.push(!1),b.push(m),!1===c){var h=0,d=[];do h=d.length,d=d.concat(u.apply(this,b));
while(h!==d.length);return d}return u.apply(this,b)};this.insert=function(a,c){if(2>arguments.length)throw"Wrong number of arguments. RT.Insert requires at least a bounding rectangle and an object.";return n({x:a.x,y:a.y,w:a.w,h:a.h,leaf:c},m),m}};
RTree.Rectangle=function(a,c,r,m){var u,t,n,A,f,b;a.x?(u=a.x,n=a.y,0!==a.w&&!a.w&&a.x2?(f=a.x2-a.x,b=a.y2-a.y):(f=a.w,b=a.h),t=u+f,A=n+b):(u=a,n=c,f=r,b=m,t=u+f,A=n+b);this.x1=this.x=function(){return u};this.y1=this.y=function(){return n};this.x2=function(){return t};this.y2=function(){return A};this.w=function(){return f};this.h=function(){return b};this.toJSON=function(){return'{"x":'+u.toString()+', "y":'+n.toString()+', "w":'+f.toString()+', "h":'+b.toString()+"}"};this.overlap=function(a){return this.x()<
a.x2()&&this.x2()>a.x()&&this.y()<a.y2()&&this.y2()>a.y()};this.expand=function(a){var d=Math.min(this.x(),a.x()),c=Math.min(this.y(),a.y());return f=Math.max(this.x2(),a.x2())-d,b=Math.max(this.y2(),a.y2())-c,u=d,n=c,this};this.setRect=function(a,b,c,f){}};RTree.Rectangle.overlap_rectangle=function(a,c){return a.x<c.x+c.w&&a.x+a.w>c.x&&a.y<c.y+c.h&&a.y+a.h>c.y};RTree.Rectangle.contains_rectangle=function(a,c){return a.x+a.w<=c.x+c.w&&a.x>=c.x&&a.y+a.h<=c.y+c.h&&a.y>=c.y};
RTree.Rectangle.expand_rectangle=function(a,c){var r,m;return r=a.x<c.x?a.x:c.x,m=a.y<c.y?a.y:c.y,a.w=a.x+a.w>c.x+c.w?a.x+a.w-r:c.x+c.w-r,a.h=a.y+a.h>c.y+c.h?a.y+a.h-m:c.y+c.h-m,a.x=r,a.y=m,a};RTree.Rectangle.make_MBR=function(a,c){if(1>a.length)return{x:0,y:0,w:0,h:0};c?(c.x=a[0].x,c.y=a[0].y,c.w=a[0].w,c.h=a[0].h):c={x:a[0].x,y:a[0].y,w:a[0].w,h:a[0].h};for(var r=a.length-1;0<r;r--)RTree.Rectangle.expand_rectangle(c,a[r]);return c};
RTree.Rectangle.squarified_ratio=function(a,c,r){var m=(a+c)/2;a*=c;return a*r/(a/(m*m))};